<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- dataSource -->
	<bean id="jpaDs" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3307/campdb" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="dataSource" ref="jpaDs" />
	</bean>

	<!-- JPA 예외를 스프링 예외로 변환 -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="jpaDs" />
		<property name="packagesToScan" value="com.sb.camp.domain" /> <!-- @Entity 탐색 시작 위치 -->
		<property name="jpaVendorAdapter">
			<!-- 하이버네이트 구현체 사용 -->
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties"> <!-- 하이버네이트 상세 설정 -->
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop> <!-- 방언 -->
				<prop key="hibernate.id.new_generator_mappings">true</prop>  <!-- 새 버전의 ID 생성 옵션 -->
				<prop key="hibernate.show_sql">true</prop>                   <!-- SQL 보기 -->
				<prop key="hibernate.format_sql">true</prop>                 <!-- SQL 정렬해서 보기 -->
				<prop key="hibernate.use_sql_comments">true</prop>           <!-- SQL 코멘트 보기 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>             <!-- DDL 자동 생성 -->
			</props>
		</property>
	</bean>
</beans>